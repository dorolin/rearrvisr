% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/summarizeBlocks.R
\name{summarizeBlocks}
\alias{summarizeBlocks}
\title{Summarize Synteny Blocks}
\usage{
summarizeBlocks(SYNT, focalgenome, compgenome, ordfocal)
}
\arguments{
\item{SYNT}{A list of matrices that store data on different classes of
rearrangements and additional information. \code{SYNT} must have been
generated with the \code{\link{computeRearrs}} function.}

\item{focalgenome}{Data frame representing the focal genome, containing the
mandatory columns \code{$marker}, \code{$scaff}, \code{$start},
\code{$end}, and \code{$strand}, and optional further columns. Markers need
to be ordered by their map position.}

\item{compgenome}{Data frame representing the compared genome (e.g., an
ancestral genome reconstruction, or an extant genome), with the first three
columns \code{$marker}, \code{$orientation}, and \code{$car}, followed by
columns alternating node type and node element. Markers need to be ordered
by their node elements. \code{compgenome} must be the same data frame that
was used to generate the list \code{SYNT} with the
\code{\link{computeRearrs}} function.}

\item{ordfocal}{Character vector with the IDs of the focal genome segments
that will be summarized. Have to match (a subset of) IDs in
\code{focalgenome$scaff}.}
}
\value{
A list of lists that summarizes the alignment between the focal
  genome and each \emph{PQ-tree}, and records whether synteny blocks are part
  of different classes of rearrangements. The top-level list elements are
  focal genome segments, and the lower-level list elements contain
  information on synteny blocks and rearrangements for each focal genome
  segment. For details on \emph{PQ-trees} see the description of the
  \code{"compgenome"} class in the Details section of the
  \code{\link{checkInfile}} function, Booth & Lueker 1976, Chauve & Tannier
  2008, or the package vignette.

  The names of the top-level list elements correspond to the strings in
  \code{ordfocal}. Each list element is itself a list containing the data
  frame \code{$blocks} and five numeric matrices \code{$TLBS}, \code{$TLWS},
  \code{$TLWC}, \code{$IV}, and \code{$IVsm}, described below. In all six
  list elements, each synteny block is represented by a row. Note that
  separate blocks are also generated when the hierarchical structure of the
  underlying \emph{PQ-tree} changes, therefore not all independent rows are
  caused by a rearrangement.

  \code{$blocks} contains information on the alignment and structure of each
  \emph{PQ-tree}. The columns \code{$blocks$start} and \code{$blocks$end}
  give the start and end positions of the synteny block in \code{SYNT}
  (positions start at \code{1} separately for each focal genome segment).
  \code{$blocks$markerS} and \code{$blocks$markerE} give the marker IDs of
  the first and last marker per block. \code{$blocks$car} gives the ID of the
  CAR. Nine columns per hierarchy level describe the structure of each
  \emph{PQ-tree} and its alignment to the focal genome. Hierarchy levels of
  the \emph{PQ-trees} are indicated by suffixes \code{{1, 2, ...}}.
  \code{$blocks$type} gives the node type. \code{$blocks$elemS} and
  \code{$blocks$elemE} give the first and last ID of the node elements per
  block. They correspond to the IDs in the odd columns of \code{compgenome}
  (note that some IDs within blocks or in-between might be missing when
  markers in the compared genome are absent from the focal genome).
  \code{$blocks$node} indicates whether the block contains \emph{PQ-tree}
  nodes (value is \code{1}) or only leaf elements (value is \code{0}). The
  columns \code{$blocks$nodeori}, \code{$blocks$subnode},
  \code{$blocks$blockid}, \code{$blocks$blockori}, and \code{$blocks$premask}
  summarize for each block the values in the list elements of \code{SYNT}
  with the corresponding names (described in the Value section in the
  documentation of the \code{\link{computeRearrs}} function). The column
  \code{$blocks$nodeori1}, for example, summarizes for each block the values
  in the second column (i.e., the first node level) of \code{SYNT$nodeori}.

  The numeric matrices \code{$TLBS}, \code{$TLWS}, \code{$TLWC}, \code{$IV},
  and \code{$IVsm} indicate whether blocks are part of different classes of
  rearrangements. \code{$TLBS} stores \code{T}rans\code{L}ocations between
  CARs \code{B}etween focal \code{S}egments; \code{$TLWS} stores
  \code{T}rans\code{L}ocations between CARs \code{W}ithin focal
  \code{S}egments; \code{$TLWC} stores \code{T}rans\code{L}ocations within
  CARs \code{W}ithin focal \code{S}egments; \code{$IV} and \code{$IVsm} store
  \code{I}n\code{V}ersions within CARs within focal segments. In \code{$IV},
  blocks that are part of a multi-marker inversion are tagged with \code{1},
  while in \code{$IVsm}, integers \code{>0} indicate the positions of
  single-marker inversions (i.e., markers with switched orientation) within
  their blocks. Each rearrangement is represented by a separate column, and
  blocks that are part of a rearrangement have a tag value of \code{>0}. Note
  that some columns in \code{$TLWS} or \code{$TLWC} may be duplicated due to
  the underlying algorithm in \code{\link{computeRearrs}}; although
  corresponding to the same rearrangement, these duplicated columns are
  nevertheless included for completeness. By default these columns will not
  be visualized with the \code{\link{genomeRearrPlot}} function. If no
  rearrangements were detected for a certain class, the matrix has zero
  columns. See the package vignette or the Value section in the documentation
  of the \code{\link{computeRearrs}} function for details on the meaning of
  different tag values in these matrices.

  The returned data can be visualized with the \code{\link{genomeRearrPlot}}
  function.
}
\description{
For each synteny block, summarize rearrangements and information on the
alignment between the focal genome and the compared genome
}
\details{
\code{focalgenome} must contain the column \code{$marker}, a vector of
  either characters or integers with unique ortholog IDs that can be matched
  to the values in the rownames of \code{SYNT} and the \code{$marker} column
  of \code{compgenome}. Values can be \code{NA} for markers that have no
  ortholog. \code{$scaff} must be a character vector giving the name of the
  focal genome segment (i.e., chromosome or scaffold) of origin of each
  marker. \code{$start} and \code{$end} must be numeric vectors giving the
  location of each marker on its focal genome segment. \code{$strand} must be
  a vector of \code{"+"} and \code{"-"} characters giving the reading
  direction of each marker. Additional columns are ignored and may store
  custom information, such as marker names. Markers need to be ordered by
  their map position within each focal genome segment, for example by running
  the \code{\link{orderGenomeMap}} function. \code{focalgenome} may contain
  additional rows that were absent when running the
  \code{\link{computeRearrs}} function. However, all markers present in
  \code{SYNT} need to be contained in \code{focalgenome}, with the subset of
  shared markers being in the same order.
}
\section{References}{


  Booth, K.S. & Lueker, G.S. (1976). Testing for the consecutive ones
  property, interval graphs, and graph planarity using \emph{PQ}-Tree
  algorithms. \emph{Journal of Computer and System Sciences}, \strong{13},
  335--379. doi:
  \href{https://doi.org/10.1016/S0022-0000(76)80045-1}{10.1016/S0022-0000(76)80045-1}.

  Chauve, C. & Tannier, E. (2008). A methodological framework for the
  reconstruction of contiguous regions of ancestral genomes and its
  application to mammalian genomes. \emph{PLOS Computational Biology},
  \strong{4}, e1000234. doi:
  \href{https://doi.org/10.1371/journal.pcbi.1000234}{10.1371/journal.pcbi.1000234}.
}

\examples{
SYNT <- computeRearrs(TOY24_focalgenome, TOY24_compgenome, doubled = TRUE)

BLOCKS <- summarizeBlocks(SYNT, TOY24_focalgenome, TOY24_compgenome,
                          c("1","2","3"))

\dontrun{

## show summary for first focal genome segment
BLOCKS[[1]]
}

}
\seealso{
\code{\link{checkInfile}}, \code{\link{computeRearrs}},
  \code{\link{genomeRearrPlot}}.
}
