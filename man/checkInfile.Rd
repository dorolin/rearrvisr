% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/checkInfile.R
\name{checkInfile}
\alias{checkInfile}
\title{Check input files}
\usage{
checkInfile(myobject, myclass, checkorder = NULL)
}
\arguments{
\item{myobject}{Data object to be tested.}

\item{myclass}{Name of data class. Can be one of the strings
\code{"focalgenome"}, \code{"compgenome"}, \code{"SYNT"}, or
\code{"BLOCKS"}.}

\item{checkorder}{Logical. If \code{TRUE}, the order of markers in class
\code{"focalgenome"} or \code{"compgenome"} is checked; if \code{FALSE},
only the file format is verified. Ignored for classes \code{"SYNT"} and
\code{"BLOCKS"}.}
}
\value{
Returns an error message when a problem has been detected, or nothing
  otherwise.
}
\description{
Check input data to ensure that file format is correct
}
\details{
Objects of the class \code{"focalgenome"} must contain the column
  \code{$marker}, a vector of either characters or integers giving unique IDs
  for orthologs. Values can be \code{NA} for markers that have no ortholog.
  \code{$scaff} must be a character vector giving the name of the focal
  genome segment (i.e., chromosome or scaffold) of origin of each marker.
  \code{$start} and \code{$end} must be numeric vectors giving the location
  of each marker on its focal genome segment. \code{$strand} must be a vector
  of \code{"+"} and \code{"-"} characters giving the reading direction of
  each marker. Additional columns are ignored and may store custom
  information, such as marker names. See Examples below for the
  \code{focalgenome} format.

  Objects of the class \code{"compgenome"} must contain the column
  \code{$marker}, a vector of either characters or integers giving unique
  IDs for orthologs. \code{$orientation} must be a vector of \code{"+"} and
  \code{"-"} characters giving the reading direction of each marker in the
  compared genome. \code{$car} must be an integer vector giving the location
  of each marker on its compared genome segment (i.e., \emph{Contiguous
  Ancestral Region}, or CAR), analogous to contiguous sets of genetic markers
  on a chromosome, scaffold, or contig. Each CAR is represented by a
  \emph{PQ-tree} (Booth & Lueker 1976; Chauve & Tannier 2008). The \emph{PQ}
  structure of each CAR is defined by additional columns (at least two) that
  have to alternate between character vectors of node type (\code{"P"},
  \code{"Q"}, or \code{NA}) in even columns, and integer vectors of node
  elements in odd columns (missing values are permitted past the fifth
  column). Every set of node type and node element column reflects the
  hierarchical structure of each \emph{PQ-tree}, with the rightmost columns
  representing the lowest level of the hierarchy. \emph{P-nodes} contain
  contiguous markers and/or nodes in arbitrary order, while \emph{Q-nodes}
  contain contiguous markers and/or nodes in fixed order (including their
  reversal). For additional details on \emph{PQ-trees} see Booth & Lueker
  1976, Chauve & Tannier 2008, or the package vignette. See Examples below
  for the \code{compgenome} format.

  Objects of the class \code{"SYNT"} must be a list of matrices generated by
  the \code{\link{computeRearrs}} function. The list stores data on different
  classes of rearrangements and additional information.

  Objects of the class \code{"BLOCKS"} must be a list of lists generated by
  the \code{\link{summarizeBlocks}} function. The top-level list elements of
  the \code{"BLOCKS"} object are focal genome segments, and the lower-level
  list elements contain information on synteny blocks and rearrangements for
  each focal genome segment.
}
\section{References}{


  Booth, K.S. & Lueker, G.S. (1976). Testing for the consecutive ones
  property, interval graphs, and graph planarity using \emph{PQ}-Tree
  algorithms. \emph{Journal of Computer and System Sciences}, \strong{13},
  335--379. doi:
  \href{https://doi.org/10.1016/S0022-0000(76)80045-1}{10.1016/S0022-0000(76)80045-1}.

  Chauve, C. & Tannier, E. (2008). A methodological framework for the
  reconstruction of contiguous regions of ancestral genomes and its
  application to mammalian genomes. \emph{PLOS Computational Biology},
  \strong{4}, e1000234. doi:
  \href{https://doi.org/10.1371/journal.pcbi.1000234}{10.1371/journal.pcbi.1000234}.
}

\examples{
checkInfile(TOY24_focalgenome, "focalgenome", checkorder = TRUE)

## focalgenome format:
TOY24_focalgenome

## compgenome format:
TOY24_compgenome

\dontrun{

## markers not ordered:
myorder <- sample(1:nrow(TOY24_focalgenome))
checkInfile(TOY24_focalgenome[myorder, ], "focalgenome", checkorder = TRUE)
}

}
\seealso{
\code{\link{computeRearrs}}, \code{\link{summarizeBlocks}}.
}
